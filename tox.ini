[tox]
isolated_build = true
envlist = py{38,39,310,311,312},style,docs,typecheck,isort,slotscheck
[testenv]
allowlist_externals =
    poetry
setenv=
    POETRY_VIRTUALENVS_CREATE=false
commands_pre=
    poetry install -n -v --no-root --only test
commands=
    pytest tests/

[testenv:py312]
commands =
    pytest -v --cov=whenever {posargs}

[testenv:typecheck]
commands_pre=
    poetry install -n -v --no-root --only typecheck --only test

commands=
    mypy --pretty src/ tests/

[testenv:style]
commands_pre=
    poetry install -n -v --no-root --only linting
commands=
    black --check --diff src/ tests/
    flake8 src/ tests/

[testenv:isort]
commands_pre=
    poetry install -n -v --no-root --only linting
commands=
    isort --check-only --diff src/ tests/

[testenv:slotscheck]
commands_pre=
    poetry install -n -v --no-root --only linting
commands=
    slotscheck -m whenever

[testenv:docs]
basepython=python3.11
deps=
    -rdocs/requirements.txt
commands=
    sphinx-build -W -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" \
    --color -bhtml
    python -c 'import pathlib; print("documentation available under " \
    + (pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html").as_uri())'

[coverage:run]
branch=True
[coverage:report]
fail_under=100
exclude_lines=
    pragma: no cover
    raise NotImplementedError
    def __repr__
    @overload
    ^\s+\.\.\.
    if TYPE_CHECKING.*:

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311, style, isort, docs
    3.12: py312, typecheck, slotscheck
    pypy-3.8: py38
    pypy-3.9: py39
    pypy-3.10: py310


[flake8]
exclude = .git,__pycache__,docs/source/conf.py,old,build,dist,.tox
extend-ignore = 
  # let black handle line length
  E501
